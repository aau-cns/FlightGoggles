<launch>
  <!-- Launch settings. To be passed into launch file. -->
  <arg name="use_external_renderer" default="0" />
  <arg name="render_stereo" default="0" />
  <arg name="render_quality" default="Fastest"/>
  <arg name="render_binary_name" default="FlightGoggles" />

  <group ns="/uav">


    <!-- FlightGoggles Renderer -->
    <!-- Only run renderer if not using external renderer -->
    <group unless="$(arg use_external_renderer)">
        <node name="flightgogglesRenderer" pkg="flightgoggles" type="$(arg render_binary_name).x86_64" respawn="true" args="-screen-quality $(arg render_quality)"/>
    </group>


    <!-- FlightGoggles ROS Bridge -->
    <node name="flightgoggles_ros_bridge" pkg="flightgoggles_ros_bridge" type="ROSClient" output="screen" clear_params="true">
    <param name="render_stereo" type="bool" value="$(arg render_stereo)" />
    </node>

    <!--Static transforms for 32cm stereo baseline -->
    <!-- Left camera is always at center of mass of drone. Right camera is offset by 32cm. -->
    <node pkg="tf2_ros" type="static_transform_publisher"

          name="camera_left_link" args="0 0 0 0 0 3.14159265359 uav/imu uav/camera/left"/>
    <node pkg="tf2_ros" type="static_transform_publisher"
          name="camera_right_link" args="0 -0.32 0 0 0 3.14159265359 uav/imu uav/camera/right" if="$(arg render_stereo)"/>

    <!-- Transforms for internal use by ROS Bridge. Hotfixes #116. DO NOT USE THESE TFs IN ALGORITHMS. -->
    <node pkg="tf2_ros" type="static_transform_publisher"
          name="camera_left_link_internal_hotfix" args="0 0 0 0 0 3.14159265359 uav/imu uav/camera/left/internal_hotfix" unless="$(arg render_stereo)"/>
    <node pkg="tf2_ros" type="static_transform_publisher"
          name="camera_left_link_internal_hotfix" args="0 0.32 0 0 0 3.14159265359 uav/imu uav/camera/left/internal_hotfix" if="$(arg render_stereo)"/>
    <node pkg="tf2_ros" type="static_transform_publisher"
          name="camera_right_link_internal_hotfix" args="0 -0.32 0 0 0 3.14159265359 uav/imu uav/camera/right/internal_hotfix" if="$(arg render_stereo)"/>

      <!-- Add static transforms for each camera that translate camera into X forward config. Hotfixes #116. DO NOT USE THESE TFs IN ALGORITHMS. -->
      <node pkg="tf2_ros" type="static_transform_publisher"
          name="camera_left_link_internal_nwu"  args="0  0 0 0 -1.57079632679 1.57079632679 uav/camera/left/internal_hotfix uav/camera/left/internal_nwu  " />
      <node pkg="tf2_ros" type="static_transform_publisher"
          name="camera_right_link_internal_nwu" args="0  0 0 0 -1.57079632679 1.57079632679 uav/camera/right/internal_hotfix uav/camera/right/internal_nwu  " if="$(arg render_stereo)"/>

    <param name="/uav/camera/render_stereo" value="$(arg render_stereo)" />

    <!--Static transform for ENU to NED world-->
    <node pkg="tf2_ros" type="static_transform_publisher"
          name="world_ned_link" args="0 0 0 1.57079632679 3.14159265359 0 'world' 'world/ned'"/>

  </group>
</launch>
